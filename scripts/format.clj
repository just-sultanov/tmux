#!/usr/bin/env bb

(require '[clojure.string :as str])

(def re
  (re-pattern "\\P{M}\\p{M}*+"))

(def formats
  {:square "ó°Ž£ó°Ž¦ó°Ž©ó°Ž¬ó°Ž®ó°Ž°ó°Žµó°Ž¸ó°Ž»ó°Ž¾"
   :double-square "ó°Ž¢ó°Ž¥ó°Ž¨ó°Ž«ó°Ž²ó°Ž¯ó°Ž´ó°Ž·ó°Žºó°Ž½"
   :digital "ðŸ¯°ðŸ¯±ðŸ¯²ðŸ¯³ðŸ¯´ðŸ¯µðŸ¯¶ðŸ¯·ðŸ¯¸ðŸ¯¹"})

(defn char->long
  [c]
  (parse-long (str c)))

(defn by-format
  [s fmt]
  (let [fmt (or (some-> fmt keyword) :square)
        numbers (->> fmt (get formats) (re-seq re) (vec))]
    (->> s
         (map (comp (partial get numbers) char->long))
         (str/join))))

(let [[s fmt] *command-line-args*]
  (print (by-format s fmt)))
